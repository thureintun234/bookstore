{"version":3,"sources":["components/BookForm.jsx","components/AddBook.jsx","components/Book.jsx","components/BooksList.jsx","components/EditBook.jsx","components/Header.jsx","hook/useLocalStorage.jsx","router/AppRouter.jsx","App.jsx","index.js"],"names":["BookForm","props","useState","bookname","book","author","quantity","price","date","setBook","errorMsg","setErrorMsg","handleInputChange","e","target","name","value","parseInt","prevState","match","className","Form","onSubmit","preventDefault","every","field","trim","id","uuidv4","Date","handleOnSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","AddBook","history","books","setBooks","push","Book","handleRemoveBook","useHistory","Card","style","width","Body","Title","toDateString","onClick","BooksList","filter","_","isEmpty","map","EditBook","useParams","bookToEdit","find","filterBooks","Header","to","activeClassName","exact","useLocalStorage","key","initialValue","localValue","window","localStorage","getItem","JSON","parse","error","setValue","useEffect","setItem","stringify","AppRouter","render","path","component","App","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.b61b8889.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Form,Button } from 'react-bootstrap'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst BookForm = (props) => {\n    const [book,setBook] = useState({\n        bookname:props.book ? props.book.bookname : '',\n        author:props.book ? props.book.author : '',\n        quantity:props.book ? props.book.quantity : '',\n        price:props.book ? props.book.price : '',\n        date:props.book ? props.book.date : ''\n    })\n\n    const [errorMsg,setErrorMsg] = useState('')\n    const {bookname,author,price,quantity} = book\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault()\n        const values = [bookname,author,price,quantity]\n        let errorMsg = ''\n\n        const allFieldsFilled = values.every(field => {\n            const value = `${field}`.trim()\n            return value !== '' && value !== '0' \n        })\n\n        if(allFieldsFilled) {\n            const book = {\n                id:uuidv4(),\n                bookname,\n                author,\n                price,\n                quantity,\n                date:new Date()\n            }\n            props.handleOnSubmit(book)\n        } else {\n            errorMsg = 'Please fill out all the fields'\n        }\n        setErrorMsg(errorMsg)\n    }\n\n    const handleInputChange = (e) => {\n        const {name,value} = e.target\n        switch(name) {\n            case 'quantity':\n                if(value === '' || parseInt(value) === +value) {\n                    setBook(prevState => ({\n                        ...prevState,\n                        [name]:value\n                    }))\n                }\n                break;\n            case 'price':\n                if(value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n                    setBook(prevState => ({\n                        ...prevState,\n                        [name]:value\n                    }))\n                }\n                break;\n            default:\n                setBook(prevState => ({\n                    ...prevState,\n                    [name]:value\n                }))\n        }\n    }\n\n    return (\n        <div className=\"main-form\">\n            {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n            <Form onSubmit={handleOnSubmit}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Book Name</Form.Label>\n                    <Form.Control\n                    className=\"input-control\"\n                    type=\"text\"\n                    name=\"bookname\"\n                    value={bookname}\n                    placeholder=\"Enter name of book\"\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"author\">\n                    <Form.Label>Book Author</Form.Label>\n                    <Form.Control \n                    className=\"input-control\"\n                    type=\"text\"\n                    name=\"author\"\n                    value={author}\n                    placeholder=\"Enter name of author\"\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Book Quantity</Form.Label>\n                    <Form.Control \n                    className=\"input-control\"\n                    type=\"text\"\n                    name=\"quantity\"\n                    value={quantity}\n                    placeholder=\"Enter name of quantity\"\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"price\">\n                    <Form.Label>Book Price</Form.Label>\n                    <Form.Control \n                    className=\"input-control\"\n                    type=\"text\"\n                    name=\"price\"\n                    value={price}\n                    placeholder=\"Enter name of price\"\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default BookForm\n","import React from 'react'\nimport BookForm from './BookForm'\n\nconst AddBook = ({history,books,setBooks}) => {\n    const handleOnSubmit = (book) => {\n        setBooks([book,...books])\n        history.push('/')\n    }\n\n    return (\n        <>\n            <BookForm handleOnSubmit={handleOnSubmit} />\n        </>\n    )\n}\n\nexport default AddBook\n","import React from 'react'\nimport {Button,Card} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst Book = (props) => {\n    const {id,bookname,author,price,quantity,date,handleRemoveBook} = props\n    const history = useHistory()\n\n    return (\n        <Card style={{width:'18rem'}} className=\"book\">\n            <Card.Body>\n                <Card.Title className=\"book-title\">{bookname}</Card.Title>\n                <div className=\"book-details\">\n                    <div>Author: {author}</div>\n                    <div>Quantity: {quantity}</div>\n                    <div>Price: {price}</div>\n                    <div>Date: {new Date(date).toDateString()}</div>\n                </div>\n                <Button variant=\"primary\" onClick={() => history.push(`/edit/${id}`)}>Edit</Button>{' '}\n                <Button variant=\"danger\" onClick={() => handleRemoveBook(id)}>Delete</Button>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Book\n","import React from 'react'\nimport Book from './Book'\nimport _ from 'lodash'\n\nconst BooksList = ({books,setBooks}) => {\n    const handleRemoveBook = (id) => {\n        setBooks(books.filter(book => book.id !== id))\n    }\n\n    return (\n        <>\n           <div className=\"book-list\">\n                {!_.isEmpty(books) ? (\n                    books.map(book => (\n                        <Book key={book.id} {...book} handleRemoveBook={handleRemoveBook} />\n                    ))\n                ) : (\n                    <p className=\"message\">No books available, Please add some books</p>\n                )\n            }\n           </div>\n        </>\n    )\n}\n\nexport default BooksList\n","import React from 'react'\nimport BookForm from './BookForm'\nimport { useParams } from 'react-router-dom'\n\nconst EditBook = ({history,books,setBooks}) => {\n    const {id} = useParams()\n    const bookToEdit = books.find(book => book.id === id)\n\n    const handleOnSubmit = (book) => {\n        const filterBooks = books.filter(book => book.id !== id)\n        setBooks([book,...filterBooks])\n        history.push('/')\n    }\n\n    return (\n        <div>\n            <BookForm book={bookToEdit} handleOnSubmit={handleOnSubmit} />\n        </div>\n    )\n}\n\nexport default EditBook\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Header = () => {\n    return (\n        <header>\n            <h1>Book Management App</h1>\n            <hr />\n            <div className=\"links\">\n                <NavLink to=\"/\" className=\"link\" activeClassName=\"active\" exact>\n                    Books List\n                </NavLink>\n                <NavLink to=\"/add\" className=\"link\" activeClassName=\"active\">\n                    Add Book\n                </NavLink>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import {useState,useEffect} from 'react'\n\nconst useLocalStorage = (key,initialValue) => {\n    const [value,setValue] = useState(() => {\n        try {\n            const localValue = window.localStorage.getItem(key)\n            return localValue ? JSON.parse(localValue) : initialValue\n        }catch(error) {\n            return initialValue \n        }\n    })\n\n    useEffect(() => {\n        window.localStorage.setItem(key,JSON.stringify(value))\n    },[key,value])\n\n    return [value,setValue]\n}\n\nexport default useLocalStorage\n","import React from 'react'\nimport {BrowserRouter,Switch,Route, Redirect} from 'react-router-dom'\nimport AddBook from '../components/AddBook'\nimport BooksList from '../components/BooksList'\nimport EditBook from '../components/EditBook'\nimport Header from '../components/Header'\nimport useLocalStorage from '../hook/useLocalStorage'\n\n\nconst AppRouter = () => {\n    const [books,setBooks] = useLocalStorage('books',[])\n\n    return (\n        <BrowserRouter>\n            <div>\n                <Header />\n                <div className=\"main-content\">\n                    <Switch>\n                        <Route render={props => (\n                            <BooksList {...props} books={books} setBooks={setBooks} />\n                        )} path=\"/\" exact={true} />\n                        <Route render={props => (\n                            <AddBook {...props} books={books} setBooks={setBooks} />\n                        )} path=\"/add\" />\n                        <Route render={props => (\n                            <EditBook {...props} books={books} setBooks={setBooks} />\n                        )} path=\"/edit/:id\" />\n                        <Route component={() => <Redirect to=\"/\" />} />\n                    </Switch>\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter\n","import React from 'react'\nimport AppRouter from './router/AppRouter'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './styles.scss'\n\nconst App = () => {\n    return (\n        <>\n            <AppRouter />\n        </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(<App />,document.getElementById('root'))"],"sourceRoot":""}